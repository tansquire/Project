#include <SPI.h>
#include <LoRa.h>
long lastSendTime = 0; 
int interval = 2000; 

void setup() 
{
Serial.begin(9600);
LoRa.setPins(10,9,2);
while (!Serial);
Serial.println("LoRa gateway");

if (!LoRa.begin(433E6)) 
{
Serial.println("Starting LoRa failed!");
while (1);
}
}

void loop() 
{
  if (millis() - lastSendTime > interval) 
  {
    String message = "I am gateway";   // send a message
    sendMessage(message);
    Serial.println("Sending " + message);
    lastSendTime = millis();            // timestamp the message
    interval = random(2000) + 1000;    // 2-3 seconds
  }

  // parse for a packet, and call onReceive with the result:
onReceive(LoRa.parsePacket());

}

void sendMessage(String outgoing)
{
  LoRa.beginPacket();                   
  LoRa.print(outgoing);                 
  LoRa.endPacket();                     
                        
}

void onReceive(int packetSize) 
{
  if (packetSize == 0) return;          // if there's no packet, return

  // read packet header bytes:
  
  String incoming = "";

  while (LoRa.available()) 
  {
    incoming += (char)LoRa.read();
  }


  Serial.println("Message: " + incoming);
  Serial.println("RSSI: " + String(LoRa.packetRssi()));
  Serial.println("Snr: " + String(LoRa.packetSnr()));
  Serial.println();
}
